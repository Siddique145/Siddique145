# name: Generate snake animation

# on:
#   schedule:
#     - cron: "0 */12 * * *"  # Cron expression to run every 12 hours

#   workflow_dispatch:  # Manual trigger

#   push:
#     branches:
#       - main
#       - master

# jobs:
#   generate:
#     permissions:
#       contents: write
#     runs-on: ubuntu-latest
#     timeout-minutes: 5

#     steps:
#       # Step 1: Checkout the repository (important for Git operations)
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       # Step 2: Generate snake.svg file
#       - name: Generate snake.svg file
#         uses: Platane/snk/svg-only@v3
#         with:
#           github_user_name: ${{ github.repository_owner }}
#           outputs: dist/snake.svg?palette=github-light

#       # Step 3: Push the generated snake.svg to the output branch
#       - name: Push snake.svg to the output branch
#         uses: crazy-max/ghaction-github-pages@v3.1.0
#         with:
#           target_branch: output
#           build_dir: dist
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       # Step 4: Commit and push changes to main and master branches
#       - name: Commit and push to main and master branches
#         run: |
#           git config user.name "GitHub Actions"
#           git config user.email "actions@github.com"
#           git add dist/snake.svg
#           git diff --exit-code || (git commit -m "Update snake.svg" && git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} main)
#           git diff --exit-code || (git commit -m "Update snake.svg" && git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} master)










name: Generate snake animation

on:
  schedule:
    - cron: "0 */12 * * *"  # Cron expression to run every 12 hours

  workflow_dispatch:  # Manual trigger

  push:
    branches:
      - main
      - master

jobs:
  generate:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # Step 1: Checkout the repository (important for Git operations)
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Generate snake.svg file
      - name: Generate snake.svg file
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: dist/snake.svg?palette=github-light

      # Step 3: Debugging - List contents of dist folder and the repository
      - name: Debugging - List contents of dist folder and repo
        run: |
          echo "Listing all files in the repository:"
          ls -la
          echo "Listing files in dist directory:"
          ls -la dist

      # Step 4: Push the generated snake.svg to the output branch
      - name: Push snake.svg to the output branch
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Commit and push changes to main and master branches only if there are changes
      - name: Commit and push to main and master branches
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add dist/snake.svg
          # Check if the file has changes before committing
          git diff --exit-code || (git commit -m "Update snake.svg" && git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} main)
          git diff --exit-code || (git commit -m "Update snake.svg" && git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} master)
